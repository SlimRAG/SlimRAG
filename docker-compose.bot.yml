version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: slimrag
      POSTGRES_USER: slimrag
      POSTGRES_PASSWORD: slimrag_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U slimrag -d slimrag"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  slimrag-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      # Database
      DSN: "postgres://slimrag:slimrag_password@postgres:5432/slimrag?sslmode=disable"
      
      # Embedding Model (replace with your actual endpoints)
      EMBEDDING_BASE_URL: "${EMBEDDING_BASE_URL:-http://localhost:11434/v1}"
      EMBEDDING_MODEL: "${EMBEDDING_MODEL:-nomic-embed-text}"
      
      # Rerank Model (optional)
      RERANK_BASE_URL: "${RERANK_BASE_URL:-}"
      RERANK_MODEL: "${RERANK_MODEL:-}"
      
      # Assistant Model
      ASSISTANT_BASE_URL: "${ASSISTANT_BASE_URL:-http://localhost:11434/v1}"
      ASSISTANT_MODEL: "${ASSISTANT_MODEL:-llama3.2}"
      
      # OpenAI API Key (if using OpenAI models)
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      
      # Bot Tokens
      TELEGRAM_BOT_TOKEN: "${TELEGRAM_BOT_TOKEN:-}"
      SLACK_BOT_TOKEN: "${SLACK_BOT_TOKEN:-}"
      SLACK_APP_TOKEN: "${SLACK_APP_TOKEN:-}"
      
      # Bot Configuration
      MAX_WORKERS: "${MAX_WORKERS:-3}"
      
      # Server Configuration
      BIND_ADDR: "0.0.0.0:8080"
      
      # Logging
      LOG_LEVEL: "${LOG_LEVEL:-info}"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    # Uncomment if you need to expose the health check port
    # ports:
    #   - "8080:8080"

volumes:
  postgres_data:
    driver: local